// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id                String                 @id @default(cuid())
  name              String?
  email             String?                @unique
  emailVerified     DateTime?
  username          String                 @unique
  password          String        
  image             String?
  accounts          Account[]
  sessions          Session[]
  created_tasks     Task[]
  assigned_tasks    Assignees_On_Tasks[]
  comments          Comment[]
  assigned_projects Assignees_On_Project[]
  created_projects  Project[]
}

model Project {
  id             String                 @id @default(cuid())
  title          String
  url            String
  description    String
  category       String                 @default("Software")
  assigned_users Assignees_On_Project[]
  tasks          Task[]
  creator        User                   @relation(fields: [creator_email], references: [email])
  creator_email  String                 @default("patgiok@gmail.com")
}

model Task {
  id          Int                  @id @default(autoincrement())
  title       String
  description String?
  reporter    User                 @relation(fields: [reporterId], references: [id])
  reporterId  String
  priority    String
  status      String               @default("Backlog")
  issue_type  String               @default("Task")
  assignees   Assignees_On_Tasks[]
  comments    Comment[]
  project     Project              @relation(fields: [projectId], references: [id])
  projectId   String
}

model Comment {
  id      String @id @default(cuid())
  user    User   @relation(fields: [userId], references: [id])
  userId  String
  task    Task   @relation(fields: [taskId], references: [id])
  taskId  Int
  comment String

  @@index([taskId])
  @@index([userId])
}

model Assignees_On_Tasks {
  user   User   @relation(fields: [userId], references: [id])
  userId String
  task   Task   @relation(fields: [taskId], references: [id])
  taskId Int

  @@id([userId, taskId])
}

model Assignees_On_Project {
  user      User    @relation(fields: [userId], references: [id])
  userId    String
  project   Project @relation(fields: [projectId], references: [id])
  projectId String

  @@id([userId, projectId])
}
